{
    "swagger": "2.0",
    "info": {
      "title": "Open Banking Consent Admin Channel API",
      "description": "Open Banking Consent Admin Channel API",
      "version": "v0.1"
    },
    "host": "api.lbg.com",
    "schemes": [
      "https"
    ],
    "basePath": "/consent-admin-service/v1",
    "consumes": [
      "application/json"
    ],
    "produces": [
      "application/json"
    ],
    "securityDefinitions": {
      "SSOJWEToken": {
        "type": "apiKey",
        "description": "SSO JWE Token generated by API Gateway",
        "in": "header",
        "name": "Bearer"
      }
    },
    "security": [
      {
        "SSOJWEToken": []
      }
    ],
    "paths": {
      "/permissions": {
        "get": {
          "summary": "Returns a list of consent admin permissions applicable for a given role (CUSTOMER | BRANCH_COLLEAGUE | SUPER_USER)",
          "description": "Returns a list of consent admin permissions applicable for a given role (CUSTOMER | BRANCH_COLLEAGUE | SUPER_USER). The role is derived from x-lbg-transaction-info claim set passed by API Gateway",
          "operationId": "getPermissionsForBusinessRole",
          "parameters": [
            {
              "$ref": "#/parameters/userAgent"
            },
            {
              "$ref": "#/parameters/acceptCharset"
            },
            {
              "$ref": "#/parameters/date"
            },
            {
              "$ref": "#/parameters/xLbgTxnCorrelationId"
            },
            {
              "$ref": "#/parameters/xLbgBrand"
            },
            {
              "$ref": "#/parameters/xLbgInternalUserRole"
            },
            {
              "$ref": "#/parameters/xLbgInternalPartyId"
            },
            {
              "$ref": "#/parameters/xLbgGalaxyChannel"
            },
            {
              "$ref": "#/parameters/xLbgMetadata"
            }
          ],
          "tags": [
            "Retrieve Reference Information"
          ],
          "responses": {
            "200": {
              "description": "On successful request a list of permissons is returned for the customer",
              "schema": {
                "$ref": "#/definitions/PermissionList"
              },
              "headers": {
                "Strict-Transport-Security": {
                  "default": "max-age=0",
                  "description": "HTTPS strict transport security header",
                  "type": "string"
                },
                "ETag": {
                  "description": "A unique ID identifying whether this resource has changed",
                  "type": "string"
                },
                "Cache-Control": {
                  "default": "max-age=0,no-cache,no-store",
                  "type": "string",
                  "description": "Describes how long this response can be cached"
                },
                "X-Frame-Options": {
                  "default": "DENY",
                  "type": "string",
                  "description": "Prevent this request from being loaded in any iframes"
                },
                "X-Content-Type-Options": {
                  "type": "string",
                  "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                  "default": "nosniff"
                }
              }
            },
            "400": {
              "$ref": "#/responses/Standard400ErrorResponse"
            },
            "403": {
              "$ref": "#/responses/Standard403ErrorResponse"
            },
            "415": {
              "$ref": "#/responses/Standard415ErrorResponse"
            },
            "500": {
              "$ref": "#/responses/Standard500ErrorResponse"
            },
            "503": {
              "$ref": "#/responses/Standard503ErrorResponse"
            }
          }
        }
      },
      "/agreements": {
        "get": {
          "summary": "Retrieve agreements",
          "description": "Get all agreements for a user",
          "operationId": "getAgreements",
          "parameters": [
            {
              "$ref": "#/parameters/userAgent"
            },
            {
              "$ref": "#/parameters/acceptCharset"
            },
            {
              "$ref": "#/parameters/contentLength"
            },
            {
              "$ref": "#/parameters/date"
            },
            {
              "$ref": "#/parameters/xLbgTxnCorrelationId"
            },
            {
              "$ref": "#/parameters/xLbgBrand"
            },
            {
              "$ref": "#/parameters/xLbgInternalUserRole"
            },
            {
              "$ref": "#/parameters/xLbgInternalPartyId"
            },
            {
              "$ref": "#/parameters/xLbgGalaxyChannel"
            },
            {
              "$ref": "#/parameters/xLbgMetadata"
            }
          ],
          "tags": [
            "Retrieve agreements"
          ],
          "responses": {
            "200": {
              "description": "On successful request, collection of agreements is returned",
              "schema": {
                "$ref": "#/definitions/AgreementsOutputData"
              },
              "headers": {
                "Strict-Transport-Security": {
                  "default": "max-age=0",
                  "description": "HTTPS strict transport security header",
                  "type": "string"
                },
                "ETag": {
                  "description": "A unique ID identifying whether this resource has changed",
                  "type": "string"
                },
                "Cache-Control": {
                  "default": "max-age=0,no-cache,no-store",
                  "type": "string",
                  "description": "Describes how long this response can be cached"
                },
                "X-Frame-Options": {
                  "default": "DENY",
                  "type": "string",
                  "description": "Prevent this request from being loaded in any iframes"
                },
                "X-Content-Type-Options": {
                  "type": "string",
                  "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                  "default": "nosniff"
                },
                "X-Lbg-Transaction-Info": {
                  "type": "string",
                  "description": "x-lbg-transaction-info header"
                }
              }
            },
            "400": {
              "$ref": "#/responses/Standard400ErrorResponse"
            },
            "401": {
              "$ref": "#/responses/Standard401ErrorResponse"
            },
            "403": {
              "$ref": "#/responses/Standard403ErrorResponse"
            },
            "415": {
              "$ref": "#/responses/Standard415ErrorResponse"
            },
            "500": {
              "$ref": "#/responses/Standard500ErrorResponse"
            },
            "503": {
              "$ref": "#/responses/Standard503ErrorResponse"
            }
          }
        }
      },
      "/agreements/status/revoke": {
        "put": {
          "summary": "Revoke Entitled Agreement Resource Status",
          "description": "Update Entitled Agreement Resource status to REVOKED",
          "operationId": "RevokeEntitledAgreementResourceStatus",
          "parameters": [
            {
              "$ref": "#/parameters/userAgent"
            },
            {
              "$ref": "#/parameters/acceptCharset"
            },
            {
              "$ref": "#/parameters/contentLength"
            },
            {
              "$ref": "#/parameters/xLbgInternalUserRole"
            },
            {
              "$ref": "#/parameters/xLbgTxnCorrelationId"
            },
            {
              "$ref": "#/parameters/xLbgUpdatedByUserId"
            },
            {
              "$ref": "#/parameters/updateAgreementResourceInputData"
            }
          ],
          "tags": [
            "Update Entitled Agreement Resource Status"
          ],
          "responses": {
            "200": {
              "description": "On successful request, details of the updated Entitled Agreement Resource is returned",
              "schema": {
                "$ref": "#/definitions/UpdateEntitlementStatusOutputData"
              },
              "headers": {
                "Strict-Transport-Security": {
                  "default": "max-age=0",
                  "description": "HTTPS strict transport security header",
                  "type": "string"
                },
                "ETag": {
                  "description": "A unique ID identifying whether this resource has changed",
                  "type": "string"
                },
                "Cache-Control": {
                  "default": "max-age=0,no-cache,no-store",
                  "type": "string",
                  "description": "Describes how long this response can be cached"
                },
                "X-Frame-Options": {
                  "default": "DENY",
                  "type": "string",
                  "description": "Prevent this request from being loaded in any iframes"
                },
                "X-Content-Type-Options": {
                  "type": "string",
                  "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                  "default": "nosniff"
                },
                "X-Lbg-Transaction-Info": {
                  "type": "string",
                  "description": "x-lbg-transaction-info header"
                }
              }
            },
            "400": {
              "$ref": "#/responses/Standard400ErrorResponse"
            },
            "401": {
              "$ref": "#/responses/Standard401ErrorResponse"
            },
            "403": {
              "$ref": "#/responses/Standard403ErrorResponse"
            },
            "404": {
              "$ref": "#/responses/Standard404ErrorResponse"
            },
            "415": {
              "$ref": "#/responses/Standard415ErrorResponse"
            },
            "500": {
              "$ref": "#/responses/Standard500ErrorResponse"
            },
            "503": {
              "$ref": "#/responses/Standard503ErrorResponse"
            }
          }
        }
      },
      "/agreements/status/suspend": {
        "put": {
          "summary": "Suspend Entitled Agreement Resource Status",
          "description": "Update Entitled Agreement Resource status to INACTIVE",
          "operationId": "SuspendEntitledAgreementResourceStatus",
          "parameters": [
            {
              "$ref": "#/parameters/userAgent"
            },
            {
              "$ref": "#/parameters/acceptCharset"
            },
            {
              "$ref": "#/parameters/contentLength"
            },
            {
              "$ref": "#/parameters/xLbgInternalUserRole"
            },
            {
              "$ref": "#/parameters/xLbgTxnCorrelationId"
            },
            {
              "$ref": "#/parameters/xLbgUpdatedByUserId"
            },
            {
              "$ref": "#/parameters/updateAgreementResourceInputData"
            }
          ],
          "tags": [
            "Update Entitled Agreement Resource Status"
          ],
          "responses": {
            "200": {
              "description": "On successful request, details of the updated Entitled Agreement Resource is returned",
              "schema": {
                "$ref": "#/definitions/UpdateEntitlementStatusOutputData"
              },
              "headers": {
                "Strict-Transport-Security": {
                  "default": "max-age=0",
                  "description": "HTTPS strict transport security header",
                  "type": "string"
                },
                "ETag": {
                  "description": "A unique ID identifying whether this resource has changed",
                  "type": "string"
                },
                "Cache-Control": {
                  "default": "max-age=0,no-cache,no-store",
                  "type": "string",
                  "description": "Describes how long this response can be cached"
                },
                "X-Frame-Options": {
                  "default": "DENY",
                  "type": "string",
                  "description": "Prevent this request from being loaded in any iframes"
                },
                "X-Content-Type-Options": {
                  "type": "string",
                  "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                  "default": "nosniff"
                },
                "X-Lbg-Transaction-Info": {
                  "type": "string",
                  "description": "x-lbg-transaction-info header"
                }
              }
            },
            "400": {
              "$ref": "#/responses/Standard400ErrorResponse"
            },
            "401": {
              "$ref": "#/responses/Standard401ErrorResponse"
            },
            "403": {
              "$ref": "#/responses/Standard403ErrorResponse"
            },
            "404": {
              "$ref": "#/responses/Standard404ErrorResponse"
            },
            "415": {
              "$ref": "#/responses/Standard415ErrorResponse"
            },
            "500": {
              "$ref": "#/responses/Standard500ErrorResponse"
            },
            "503": {
              "$ref": "#/responses/Standard503ErrorResponse"
            }
          }
        }
      },
      "/agreements/status/reactivate": {
        "put": {
          "summary": "Reactivate Entitled Agreement Resource Status",
          "description": "Update Entitled Agreement Resource status to ACTIVE",
          "operationId": "ReactivateEntitledAgreementResourceStatus",
          "parameters": [
            {
              "$ref": "#/parameters/userAgent"
            },
            {
              "$ref": "#/parameters/acceptCharset"
            },
            {
              "$ref": "#/parameters/contentLength"
            },
            {
              "$ref": "#/parameters/xLbgInternalUserRole"
            },
            {
              "$ref": "#/parameters/xLbgTxnCorrelationId"
            },
            {
              "$ref": "#/parameters/xLbgUpdatedByUserId"
            },
            {
              "$ref": "#/parameters/updateAgreementResourceInputData"
            }
          ],
          "tags": [
            "Update Entitled Agreement Resource Status"
          ],
          "responses": {
            "200": {
              "description": "On successful request, details of the updated Entitled Agreement Resource is returned",
              "schema": {
                "$ref": "#/definitions/UpdateEntitlementStatusOutputData"
              },
              "headers": {
                "Strict-Transport-Security": {
                  "default": "max-age=0",
                  "description": "HTTPS strict transport security header",
                  "type": "string"
                },
                "ETag": {
                  "description": "A unique ID identifying whether this resource has changed",
                  "type": "string"
                },
                "Cache-Control": {
                  "default": "max-age=0,no-cache,no-store",
                  "type": "string",
                  "description": "Describes how long this response can be cached"
                },
                "X-Frame-Options": {
                  "default": "DENY",
                  "type": "string",
                  "description": "Prevent this request from being loaded in any iframes"
                },
                "X-Content-Type-Options": {
                  "type": "string",
                  "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
                  "default": "nosniff"
                },
                "X-Lbg-Transaction-Info": {
                  "type": "string",
                  "description": "x-lbg-transaction-info header"
                }
              }
            },
            "400": {
              "$ref": "#/responses/Standard400ErrorResponse"
            },
            "401": {
              "$ref": "#/responses/Standard401ErrorResponse"
            },
            "403": {
              "$ref": "#/responses/Standard403ErrorResponse"
            },
            "404": {
              "$ref": "#/responses/Standard404ErrorResponse"
            },
            "415": {
              "$ref": "#/responses/Standard415ErrorResponse"
            },
            "500": {
              "$ref": "#/responses/Standard500ErrorResponse"
            },
            "503": {
              "$ref": "#/responses/Standard503ErrorResponse"
            }
          }
        }
      }
    },
    "definitions": {
      "Timestamp": {
        "type": "string",
        "format": "date-time"
      },
      "PermissionList": {
        "description": "List of permission applicable to a given business role (CUSTOMER | BRANCH_COLLEAGUE | SUPER_USER)",
        "type": "object",
        "properties": {
          "BusinessRole": {
            "type": "string",
            "description": "Business role",
            "enum": [
              "CUSTOMER",
              "BRANCH_COLLEAGUE",
              "SUPER_USER"
            ]
          },
          "Permissions": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Permission"
            }
          }
        },
        "required": [
          "BusinessRole",
          "Permissions"
        ]
      },
      "Permission": {
        "description": "Permissions applicable to a business role",
        "type": "string",
        "enum": [
          "REVOKE_ENTITLEMENT",
          "REVOKE_MULTIPLE_ENTITLEMENTS",
          "SUSPEND_ENTITLEMENT",
          "REACTIVATE_ENTITLEMENT",
          "ACTIVATE_AGREEMENT_RESOURCE",
          "DEACTIVATE_AGREEMENT_RESOURCE"
        ]
      },
      "Entitlement": {
        "description": "Base entitlement object",
        "type": "object",
        "properties": {
          "Identifier": {
            "$ref": "#/definitions/EntitlementIdentifier"
          },
          "AccountList": {
            "$ref": "#/definitions/AccountList"
          },
          "Type": {
            "$ref": "#/definitions/Type"
          },
          "CreatedDateTime": {
            "$ref": "#/definitions/CreatedDateTime"
          },
          "ExpiryDateTime": {
            "$ref": "#/definitions/ExpiryDateTime"
          },
          "EntitlementStatus": {
            "$ref": "#/definitions/EntitlementStatus"
          },
          "Party": {
            "$ref": "#/definitions/Party"
          },
          "Provider": {
            "$ref": "#/definitions/Provider"
          },
          "EntitlementStatusChangeHistoryList": {
            "$ref": "#/definitions/EntitlementStatusChangeHistoryList"
          }
        },
        "required": [
          "Identifier",
          "AccountList",
          "Type",
          "CreatedDateTime",
          "EntitlementStatus",
          "Party",
          "Provider",
          "EntitlementStatusChangeHistoryList"
        ],
        "additionalProperties": false
      },
      "EntitlementIdentifier": {
        "description": "A UUID generated to uniquely identify the Entitlement",
        "type": "number"
      },
      "FilterCriteria": {
        "type": "object",
        "properties": {
          "EntitlementIdentifiers": {
            "type": "array",
            "items": {
              "type": "integer",
              "minProperties": 1
            }
          },
          "PartyId": {
            "type": "string"
          },
          "Brand": {
            "$ref": "#/definitions/Brand"
          },
          "InternalUserId": {
            "type": "string"
          }
        },
        "minProperties": 1
      },
      "Brand": {
        "type": "string",
        "enum": [
          "LYDS",
          "HFX",
          "BOS",
          "TS"
        ]
      },
      "Type": {
        "description": "Entitlement type",
        "type": "string",
        "enum": [
          "ACCOUNT",
          "PAYMENT"
        ]
      },
      "Scope": {
        "description": "Entitlement scope",
        "type": "string",
        "enum": [
          "AISP",
          "PISP"
        ]
      },
      "CreatedDateTime": {
        "description": "ISO8601 formatted timestamp for the creation of the Entitlement",
        "type": "string",
        "format": "date-time"
      },
      "ExpiryDateTime": {
        "description": "ISO8601 formatted timestamp for the expiration of the Entitlement",
        "type": "string",
        "format": "date-time"
      },
      "EntitlementStatus": {
        "description": "Current status of the Entitlement",
        "type": "string",
        "enum": [
          "CREATED",
          "ACTIVE",
          "SUSPENDED",
          "REVOKED",
          "USED",
          "EXPIRED"
        ]
      },
      "Party": {
        "description": "Object defining the customer who authorized the Entitlement",
        "type": "object",
        "properties": {
          "PartyIdentifier": {
            "description": "Unique identifier for customer",
            "type": "string"
          },
          "PersonalTitle": {
            "description": "Title of customer",
            "type": "string"
          },
          "Name": {
            "description": "Customer name",
            "type": "string"
          },
          "TypeCode": {
            "description": "Customer type",
            "type": "string",
            "enum": [
              "INDIVIDUAL",
              "JOINT_ACCOUNT"
            ]
          },
          "InternalUserIdentifier": {
            "description": "Internal user id",
            "type": "string"
          },
          "ChannelType": {
            "description": "User type code",
            "type": "string",
            "enum": [
              "RC",
              "BB",
              "CC"
            ]
          },
          "BrandName": {
            "description": "Brand name",
            "type": "string",
            "enum": [
              "LYDS",
              "HFX",
              "BOS",
              "TSB"
            ]
          }
        },
        "required": [
          "PartyIdentifier"
        ]
      },
      "Provider": {
        "description": "Object describing the provider of the entitlement",
        "type": "object",
        "properties": {
          "ProviderIdentifier": {
            "$ref": "#/definitions/ProviderIdentifier"
          },
          "ProviderName": {
            "$ref": "#/definitions/ProviderName"
          },
          "ProviderRole": {
            "$ref": "#/definitions/ProviderRole"
          },
          "ProviderOAuthState": {
            "description": "OAuth state from initial Entitlement request",
            "type": "string"
          },
          "ProviderAppName": {
            "description": "Name of providerapp that the customer used to initially grant the Entitlement",
            "type": "string"
          },
          "ProviderGrantedPermissions": {
            "description": "Details of the permissions granted to the provider",
            "type": "object",
            "properties": {
              "Permissions": {
                "title": "Permissions list",
                "description": "Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                "type": "array",
                "items": {
                  "description": "Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
                  "$ref": "#/definitions/ProviderGrantedPermission"
                }
              },
              "TransactionsFromDateTime": {
                "description": "Starting date of resources the provider has access to for the customer",
                "type": "string",
                "format": "date-time"
              },
              "TransactionsToDateTime": {
                "description": "Finishing date of resources the provider has access to for the customer",
                "type": "string",
                "format": "date-time"
              }
            },
            "required": [
              "Permissions"
            ]
          }
        }
      },
      "ProviderGrantedPermission": {
        "type": "object",
        "properties": {
          "Code": {
            "description": "Permission code",
            "type": "string",
            "enum": [
              "ReadAccounts",
              "ReadAccountsSensitive",
              "ReadBalances",
              "ReadBeneficiaries",
              "ReadBeneficiariesSensitive",
              "ReadDirectDebits",
              "ReadStandingOrders",
              "ReadStandingOrdersSensitive",
              "ReadTransactions",
              "ReadTransactionsCredits",
              "ReadTransactionsDebits",
              "ReadTransactionsSensitive"
            ]
          },
          "Description": {
            "type": "string",
            "description": "Permission description"
          },
          "SectionHeader": {
            "type": "string",
            "description": "Permission section header"
          }
        },
        "required": [
          "Code",
          "Description",
          "SectionHeader"
        ]
      },
      "AgreementStatusOnEntitlement": {
        "description": "Status of the agreement on the Entitlement",
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "REVOKED"
        ]
      },
      "AccountIdentifier": {
        "description": "account Id",
        "type": "number"
      },
      "AccountName": {
        "type": "string",
        "description": "Account name"
      },
      "AccountNumber": {
        "type": "string",
        "description": "Account number"
      },
      "SortCode": {
        "type": "string",
        "description": "sort code"
      },
      "ProviderForCustomer": {
        "type": "object",
        "properties": {
          "ProviderId": {
            "$ref": "#/definitions/ProviderIdentifier"
          },
          "ProviderName": {
            "$ref": "#/definitions/ProviderName"
          },
          "ProviderRole": {
            "$ref": "#/definitions/ProviderRole"
          },
          "IsProviderActive": {
            "$ref": "#/definitions/IsProviderActive"
          }
        },
        "required": [
          "ProviderId",
          "ProviderName",
          "ProviderRole",
          "IsProviderActive"
        ]
      },
      "ProviderList": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/ProviderForCustomer"
        }
      },
      "AccountList": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Account"
        }
      },
      "Account": {
        "description": "Base account object",
        "type": "object",
        "properties": {
          "AccountIdentifier": {
            "$ref": "#/definitions/AccountIdentifier"
          },
          "AccountName": {
            "$ref": "#/definitions/AccountName"
          },
          "AccountNumber": {
            "$ref": "#/definitions/AccountNumber"
          },
          "SortCode": {
            "$ref": "#/definitions/SortCode"
          },
          "AccountStatusOnEntitlement": {
            "$ref": "#/definitions/AgreementStatusOnEntitlement"
          }
        },
        "additionalProperties": false
      },
      "ProviderIdentifier": {
        "description": "Unique identifier for the provider of the Entitlement",
        "type": "string"
      },
      "ProviderName": {
        "description": "Name of the provider of the Entitlement",
        "type": "string"
      },
      "ProviderRole": {
        "description": "Role of the provider of the Entitlement",
        "type": "string",
        "enum": [
          "AISP",
          "PISP"
        ]
      },
      "IsProviderActive": {
        "type": "boolean",
        "description": "Status of the provider - true if atleast one entitlement is active; false otherwise"
      },
      "EntitlementForProviderList": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Entitlement"
        }
      },
      "RevocationReasonCodes": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "Code": {
              "$ref": "#/definitions/RevocationCodes"
            },
            "Description": {
              "type": "string"
            },
            "RequiresReason": {
              "type": "boolean"
            }
          }
        }
      },
      "UserRoles": {
        "type": "string",
        "enum": [
          "CUSTOMER",
          "BRANCH_COLLEAGUE",
          "SYSTEM",
          "SUPER_USER"
        ]
      },
      "RevocationCodes": {
        "type": "string",
        "enum": [
          "CODE_001",
          "CODE_002",
          "CODE_003",
          "CODE_004",
          "CODE_005"
        ]
      },
      "RevokeEntitlementInputData": {
        "type": "object",
        "properties": {
          "EntitlementIdentifiers": {
            "type": "array",
            "items": {
              "type": "integer",
              "minProperties": 1
            }
          },
          "ReasonCode": {
            "$ref": "#/definitions/RevocationCodes"
          },
          "Description": {
            "type": "string"
          }
        },
        "required": [
          "EntitlementIdentifiers"
        ]
      },
      "RevokeEntitlementOutputData": {
        "type": "array",
        "items": {
          "type": "object",
          "properties": {
            "EntitlementId": {
              "type": "integer"
            },
            "UpdatedEntitlementStatus": {
              "$ref": "#/definitions/EntitlementStatus"
            },
            "UpdatedAtTimestamp": {
              "type": "string",
              "format": "date-time"
            }
          },
          "required": [
            "EntitlementId",
            "UpdatedEntitlementStatus",
            "UpdatedAtTimestamp"
          ]
        }
      },
      "UpdateEntitlementInputData": {
        "type": "object",
        "properties": {
          "FilterCriteria": {
            "$ref": "#/definitions/FilterCriteria"
          },
          "ReasonCode": {
            "$ref": "#/definitions/RevocationCodes"
          },
          "Description": {
            "type": "string"
          }
        },
        "required": [
          "FilterCriteria"
        ],
        "additionalProperties": false
      },
      "EntitlementStatusChangeHistoryList": {
        "description": "Array of Entitlement status change history details for the Entitlement",
        "type": "array",
        "items": {
          "$ref": "#/definitions/EntitlementStatusChangeHistory"
        }
      },
      "EntitlementStatusChangeHistory": {
        "description": "Object containing details of an update to an Entitlement Status change",
        "type": "object",
        "properties": {
          "EntitlementStatusChangeHistoryId": {
            "description": "Unique identifier (surrogate key) of the Entitlement status change",
            "type": "number"
          },
          "EntitlementId": {
            "description": "Unique identifier for the Entitlement",
            "type": "number"
          },
          "EntitlementStatusUpdatedBy": {
            "description": "Internal User Id for the user who last made the change to the Entitlement status",
            "type": "string"
          },
          "StatusUpdatedDateTime": {
            "description": "Date and time of the change to the Entitlement status",
            "type": "string"
          },
          "RevokationReasonCode": {
            "$ref": "#/definitions/RevocationCodes"
          },
          "EntitlementStatus": {
            "description": "Entitlement Status updated to",
            "$ref": "#/definitions/EntitlementStatus"
          },
          "EntitlementStatusUpdatedByRole": {
            "$ref": "#/definitions/UserRoles"
          }
        },
        "required": [
          "EntitlementStatusChangeHistoryId",
          "EntitlementId",
          "EntitlementStatusUpdatedBy",
          "StatusUpdatedDateTime",
          "EntitlementStatus",
          "EntitlementStatusUpdatedByRole"
        ]
      },
      "UpdateEntitlementStatusOutputData": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/UpdateEntitlementStatusData",
          "minProperties": 1
        }
      },
      "UpdateEntitlementStatusData": {
        "type": "object",
        "properties": {
          "EntitlementId": {
            "type": "integer"
          },
          "UpdatedEntitlementStatus": {
            "$ref": "#/definitions/EntitlementStatus"
          },
          "UpdatedAtTimestamp": {
            "$ref": "#/definitions/Timestamp"
          },
          "UpdatedByInternalUserId": {
            "type": "string"
          }
        },
        "required": [
          "EntitlementId",
          "UpdatedEntitlementStatus",
          "UpdatedAtTimestamp",
          "UpdatedByInternalUserId"
        ],
        "additionalProperties": false
      },
      "AgreementResourceStatusOutputData": {
        "type": "object",
        "properties": {
          "AgreementResourceId": {
            "type": "integer"
          },
          "AgreementResourceStatus": {
            "$ref": "#/definitions/AgreementResourceStatusOnEntitlement"
          },
          "UpdatedAtTimestamp": {
            "$ref": "#/definitions/Timestamp"
          },
          "UpdatedByInternalUserId": {
            "type": "string"
          }
        },
        "required": [
          "AgreementResourceId",
          "AgreementResourceStatus",
          "UpdatedAtTimestamp",
          "UpdatedByInternalUserId"
        ],
        "additionalProperties": false
      },
      "AgreementsOutputData": {
        "type": "object",
        "properties": {
          "Active": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Agreement"
            }
          },
          "Inactive": {
            "type": "array",
            "items": {
              "$ref": "#/definitions/Agreement"
            }
          }
        },
        "required": [
          "Active",
          "Inactive"
        ]
      },
      "Agreement": {
        "type": "object",
        "properties": {
          "EntitlementIdentifier": {
            "description": "Unique identifier (surrogate key) of the Entitlement",
            "type": "number"
          },
          "EntitlementAccessCode": {
            "$ref": "#/definitions/EntitlementAccessCode"
          },
          "CreatedDateTime": {
            "$ref": "#/definitions/CreatedDateTime"
          },
          "EntitlementStatus": {
            "$ref": "#/definitions/EntitlementStatus"
          },
          "ExpiryDateTime": {
            "$ref": "#/definitions/ExpiryDateTime"
          },
          "ProviderIdentifier": {
            "$ref": "#/definitions/ProviderIdentifier"
          },
          "ProviderName": {
            "$ref": "#/definitions/ProviderName"
          },
          "AgreementIdentifier": {
            "$ref": "#/definitions/AgreementIdentifier"
          },
          "AgreementReferenceId": {
            "$ref": "#/definitions/AgreementReferenceId"
          },
          "AgreementStatus": {
            "$ref": "#/definitions/AgreementResourceStatusOnEntitlement"
          },
          "StatusUpdatedDateTime": {
            "$ref": "#/definitions/StatusUpdatedDateTime"
          },
          "IsActive": {
            "type": "string",
            "enum": [
              "ACTIVE",
              "INACTIVE"
            ]
          },
          "AgreementResource": {
            "type": "object",
            "properties": {
              "Account": {
                "$ref": "#/definitions/Account"
              },
              "Servicer": {
                "$ref": "#/definitions/Servicer"
              },
              "Metadata": {
                "$ref": "#/definitions/Metadata"
              }
            }
          },
          "ProviderGrantedPermissions": {
            "$ref": "#/definitions/ProviderGrantedPermissions"
          }
        },
        "required": [
          "EntitlementIdentifier",
          "EntitlementAccessCode",
          "CreatedDateTime",
          "EntitlementStatus",
          "ExpiryDateTime",
          "ProviderIdentifier",
          "ProviderName",
          "AgreementIdentifier",
          "AgreementReferenceId",
          "AgreementStatus",
          "StatusUpdatedDateTime",
          "IsActive",
          "AgreementResource",
          "ProviderGrantedPermissions"
        ]
      },
      "EntitlementAccessCode": {
        "description": "A UUID generated to uniquely identify the Entitlement",
        "type": "string",
        "maxLength": 255
      },
      "AgreementIdentifier": {
        "description": "Unique identifier (surrogate key) of the agreement",
        "type": "number"
      },
      "AgreementReferenceId": {
        "description": "Generated unique UUID of the agreement",
        "type": "string"
      },
      "AgreementResourceStatusOnEntitlement": {
        "description": "Status of the agreement on the Entitlement",
        "type": "string",
        "enum": [
          "ACTIVE",
          "INACTIVE",
          "REVOKED"
        ]
      },
      "StatusUpdatedDateTime": {
        "description": "Date and time of the change to the Entitlement status",
        "type": "string"
      },
      "Servicer": {
        "description": "Party that manages the account on behalf of the account owner, that is manages the registration and booking of entries on the account, calculates balances on the account and provides information about the account. This is the servicer of the beneficiary account",
        "type": "object",
        "properties": {
          "SchemeName": {
            "description": "Name of the identification scheme, in a coded form as published in an external list.",
            "type": "string",
            "enum": [
              "BICFI",
              "UKSortCode"
            ]
          },
          "Identification": {
            "description": "Unique and unambiguous identification of the servicing institution.",
            "type": "string",
            "minLength": 1,
            "maxLength": 34
          }
        },
        "required": [
          "SchemeName",
          "Identification"
        ],
        "additionalProperties": false
      },
      "Metadata": {
        "type": "object",
        "minProperties": 0,
        "additionalProperties": true
      },
      "ProviderGrantedPermissions": {
        "description": "Details of the permissions granted to the provider",
        "type": "object",
        "properties": {
          "Permissions": {
            "title": "Permissions list",
            "description": "Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
            "type": "array",
            "items": {
              "description": "Specifies the Open Banking account request types. This is a list of the data clusters being consented by the PSU, and requested for authorisation with the ASPSP.",
              "$ref": "#/definitions/ProviderGrantedPermission"
            },
            "minProperties": 1,
            "additionalProperties": false
          },
          "TransactionsFromDateTime": {
            "description": "Starting date of resources the provider has access to for the customer",
            "type": "string",
            "format": "date-time"
          },
          "TransactionsToDateTime": {
            "description": "Finishing date of resources the provider has access to for the customer",
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "Permissions"
        ],
        "additionalProperties": false
      },
      "UpdateAgreementResourceInputData": {
        "type": "object",
        "properties": {
          "AgreementIdentifiers": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "additionalProperties": false
          }
        }
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "string"
          },
          "message": {
            "type": "string"
          },
          "statusCode": {
            "type": "integer"
          }
        }
      }
    },
    "responses": {
      "Standard400ErrorResponse": {
        "description": "Bad request error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard401ErrorResponse": {
        "description": "Unauthorised error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard403ErrorResponse": {
        "description": "Forbidden error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard404ErrorResponse": {
        "description": "Entity not found error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard415ErrorResponse": {
        "description": "Unsupported media type error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard500ErrorResponse": {
        "description": "An unexpected server error occured",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      },
      "Standard503ErrorResponse": {
        "description": "Service unavailable error",
        "schema": {
          "$ref": "#/definitions/Error"
        }
      }
    },
    "parameters": {
      "userAgent": {
        "name": "User-Agent",
        "description": "User agent HTTP header - for tracking, debugging",
        "type": "string",
        "in": "header",
        "required": true
      },
      "acceptCharset": {
        "name": "Accept-Charset",
        "description": "Accepted characterset HTTP header - defaults to utf-8",
        "type": "string",
        "in": "header",
        "required": true,
        "default": "utf-8"
      },
      "contentLength": {
        "name": "Content-Length",
        "description": "Content length HTTP header - only applicable if request body contains JSON contents",
        "type": "number",
        "format": "long",
        "in": "header"
      },
      "date": {
        "name": "Date",
        "description": "Date HTTP header - Timestamp of originating request in ISO 8601 format",
        "type": "string",
        "format": "date-time",
        "in": "header",
        "required": false
      },
      "xLbgInternalUserRole": {
        "name": "x-lbg-internal-user-role",
        "description": "Internal User Role Header",
        "in": "header",
        "required": true,
        "type": "string"
      },
      "xLbgInternalUserId": {
        "name": "x-lbg-internal-user-id",
        "description": "Internal User Id Header",
        "in": "header",
        "required": true,
        "type": "string"
      },
      "xLbgTxnCorrelationId": {
        "name": "x-lbg-txn-correlation-id",
        "description": "Transaction Correlation Id Header",
        "in": "header",
        "required": true,
        "type": "string",
        "pattern": "[a-zA-Z0-9]+"
      },
      "xLbgInternalPartyId": {
        "name": "x-lbg-internal-party-id",
        "description": "Party ID header",
        "in": "header",
        "required": true,
        "type": "string"
      },
      "xLbgGalaxyChannel": {
        "name": "x-lbg-galaxy-channel",
        "description": "Identifies Galaxy Digital channel",
        "in": "header",
        "required": true,
        "type": "string",
        "enum": [
          "STL",
          "STS",
          "IBL",
          "IBH",
          "IBS"
        ]
      },
      "xLbgBrand": {
        "name": "x-lbg-brand",
        "description": "Brand header",
        "in": "header",
        "required": true,
        "type": "string",
        "enum": [
          "LYDS",
          "HFX",
          "BOS"
        ]
      },
      "xLbgMetadata": {
        "name": "x-lbg-metadata",
        "description": "Metadata header",
        "in": "header",
        "type": "string"
      },
      "xLbgUpdatedByUserId": {
        "name": "x-lbg-updated-by-user-id",
        "in": "header",
        "description": "x-lbg-updated-by-user-id Enterprise header",
        "required": true,
        "type": "string"
      },
      "entitlementId": {
        "name": "entitlementId",
        "in": "path",
        "description": "entitlement id",
        "type": "integer",
        "required": true
      },
      "agreementId": {
        "name": "agreementId",
        "in": "path",
        "description": "agreementId",
        "type": "integer",
        "required": true
      },
      "providerIdentifier": {
        "name": "providerIdentifier",
        "in": "path",
        "description": "provider identifier",
        "type": "string",
        "required": true
      },
      "limit": {
        "name": "limit",
        "in": "query",
        "description": "pagination limit per query",
        "type": "integer",
        "minimum": 1,
        "default": 10
      },
      "offset": {
        "name": "offset",
        "in": "query",
        "description": "pagination offset per query",
        "type": "integer",
        "minimum": 0,
        "default": 0
      },
      "strictTransportSecurity": {
        "name": "Strict-Transport-Security",
        "in": "header",
        "default": "max-age=0",
        "description": "HTTPS strict transport security header",
        "type": "string",
        "required": true
      },
      "eTag": {
        "name": "Etag",
        "in": "header",
        "description": "A unique ID identifying whether this resource has changed",
        "type": "string"
      },
      "cacheControl": {
        "name": "Cache-Control",
        "in": "header",
        "default": "max-age=0,no-cache,no-store",
        "type": "string",
        "description": "Describes how long this response can be cached",
        "required": true
      },
      "xFrameOptions": {
        "name": "X-Frame-Options",
        "in": "header",
        "default": "DENY",
        "type": "string",
        "description": "Prevent this request from being loaded in any iframes",
        "required": true
      },
      "updateAgreementResourceInputData": {
        "name": "updateAgreementResourceInputData",
        "in": "body",
        "schema": {
          "$ref": "#/definitions/UpdateAgreementResourceInputData"
        },
        "description": "new account status on Agreement Resource",
        "required": true
      },
      "revokeEntitlementInputData": {
        "name": "revokeEntitlementInputData",
        "in": "body",
        "schema": {
          "$ref": "#/definitions/RevokeEntitlementInputData"
        },
        "description": "Input data for updating Entitlement status to 'Revoked' in data store",
        "required": true
      },
      "updateEntitlementInputData": {
        "name": "EntitlementStatusUpdateInputData",
        "in": "body",
        "schema": {
          "$ref": "#/definitions/UpdateEntitlementInputData"
        },
        "required": true
      },
      "xContentTypeOptions": {
        "name": "X-Content-Type-Options",
        "in": "header",
        "type": "string",
        "description": "Ensures each page has a content type and prevents browsers from doing MIME type sniffing",
        "default": "nosniff",
        "required": true
      }
    }
  }
